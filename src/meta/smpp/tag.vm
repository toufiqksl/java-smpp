/*
 * Copyright (c) Nmote d.o.o. 2003-2015. All rights reserved.
 * See LICENSE.txt for licensing information.
 */

/*
 * WARNING Do not modify this file.
 *
 * This file was generated from protocol description file
 * and will be OVERWRITTEN on next invocation of
 * smpp-gen ant task during build process.
 */

package $package;

/**
 * Defines tag constants for TLV optional parameters.
 *
 * @author (this class was autogenerated)
 */
public class Tag {
#foreach( $p in $protocol.params )
#if( $p.tag )
	/**
	 * $!p.docs
	 * (Type $p.type)
#if( $p.version )
	 * @since SMPP $p.version
#end
	 */
	public static final int $format.upperCase($p.name) = 0x${p.tag};

#end
#end
	public static String toString(int tag) {
		String result;
		switch (tag) {
#foreach( $p in $protocol.params )
#if( $p.tag )
			case $format.upperCase($p.name): result = "$p.name"; break;
#end
#end
			default: result = "unknown(" + Integer.toHexString(tag) + ")";
		}
		return result;
	}

	/**
	 * Returns SMPP protocol version when this tag
	 * has first appeared.
	 *
	 * @param tag SMPP tag
	 *
	 * @return SMPP protocol version
	 */
	public static int since(int tag) {
		int result;
		switch (tag) {
#foreach( $p in $protocol.params )
#if( $p.tag )
#if( $p.version )
			case $format.upperCase($p.name): result = 0x${p.version}; break;
#end
#end
#end
			default: result = Integer.MAX_VALUE;
		}
		return result;
	}
}